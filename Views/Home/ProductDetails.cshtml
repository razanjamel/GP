@model GP.Models.Product
@{
    ViewData["Title"] = "Product Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>    .hover-effect {
        font-size: 24px;
        color: #000;
        transition: all 0.3s ease;
    }

        .hover-effect:hover {
            font-size: 28px;
            color: #A68A6D;
        }

    .color-circle {
        width: 25px;
        height: 25px;
        border-radius: 50%;
        display: inline-block;
        margin-right: 5px;
        border: 2px solid #000;
    }

    .product-img {
        max-width: 100%;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }

    .quantity-box {
        display: flex;
        align-items: center;
        border: 2px solid #000;
        border-radius: 5px;
        width: 120px;
        overflow: hidden;
    }

        .quantity-box button {
            width: 30px;
            height: 35px;
            font-size: 18px;
            font-weight: bold;
            background: transparent;
            border: none;
            cursor: pointer;
        }

        .quantity-box .quantity-input {
            width: 40px;
            height: 35px;
            text-align: center;
            font-size: 18px;
            border: none;
            outline: none;
        }
</style>

<div class="container mt-5 pt-5">
    <div class="row" style="margin-top: 30px;">
        <div class="col-md-5">
            <img src="@Model.ImageUrl" alt="@Model.Name" class="product-img w-100" />
        </div>
        <div class="col-md-7">
            <h2 class="hover-effect fs-1 fw-bold">@Model.Name</h2>
            <div class="mb-3">
                <strong>Available Colors:</strong>
                @foreach (var color in (Model.AvailableColors ?? "").Split(',', StringSplitOptions.RemoveEmptyEntries))
                {
                    <span class="color-circle" style="background-color:@color.Trim();"></span>
                }
            </div>
            <h4>Price: <span class="text-success">$@Model.Price</span></h4>
            <p>Includes VAT</p>
            <div class="d-flex mb-3">
                <div class="quantity-box m-1">
                    <button class="minus-btn">−</button>
                    <input type="text" class="quantity-input" value="1" />
                    <button class="plus-btn">+</button>
                </div>
                <form asp-controller="Cart" asp-action="AddToCart" method="post">
                    <input type="hidden" name="productId" value="@Model.Id" />
                    <input type="hidden" name="quantity" class="cart-quantity" value="1" />
                    <button type="submit" class="btn btn-dark">Add to Cart</button>
                </form>
            </div>
            <div style="font-size: 20px;">
                <h5>Description</h5>
                <p>@Model.Description</p>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const minusBtn = document.querySelector(".minus-btn");
            const plusBtn = document.querySelector(".plus-btn");
            const quantityInput = document.querySelector(".quantity-input");
            const hiddenQuantity = document.querySelector(".cart-quantity");
            minusBtn.addEventListener("click", function () {
                let value = parseInt(quantityInput.value);
                if (value > 1) { quantityInput.value = value - 1; hiddenQuantity.value = value - 1; }
            });
            plusBtn.addEventListener("click", function () {
                let value = parseInt(quantityInput.value);
                quantityInput.value = value + 1;
                hiddenQuantity.value = value + 1;
            });
        });
    </script>
}