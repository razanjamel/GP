﻿@using IdentityDemo.Areas.Admin.Models
@model IEnumerable<UserViewModel>
@{
    ViewData["Title"] = "User Management";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<h1 style="margin-top:130px; color: #7c0101; margin-bottom:50px;">User Management</h1>

@if (TempData["SuccessMessage"] != null)
{
    <div id="successAlert" class="alert alert-success text-center shadow"
         style="font-size: 1rem; font-weight: 500; border-radius: 10px; margin-bottom:10px;">
        @TempData["SuccessMessage"]
    </div>

    <script>
        window.onload = function () {
            setTimeout(function () {
                var alert = document.getElementById('successAlert');
                if (alert) {
                    alert.style.transition = 'opacity 0.5s ease';
                    alert.style.opacity = '0';
                    setTimeout(() => alert.remove(), 500);
                }
            }, 4000);
        };
    </script>
}

@if (TempData["ErrorMessage"] != null)
{
    <div id="errorAlert" class="alert alert-danger text-center shadow"
         style="font-size: 1rem; font-weight: 500; border-radius: 10px; margin-bottom:50px;">
        @TempData["ErrorMessage"]
    </div>

    <script>
        window.onload = function () {
            setTimeout(function () {
                var alert = document.getElementById('errorAlert');
                if (alert) {
                    alert.style.transition = 'opacity 0.5s ease';
                    alert.style.opacity = '0';
                    setTimeout(() => alert.remove(), 500);
                }
            }, 4000);
        };
    </script>
}


<div class="table-responsive" style="margin-top:50px;">
    <table class="table table-striped">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.FirstName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LastName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Email)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Roles)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IsLockedOut)
                </th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @string.Join(", ", item.Roles)
                    </td>
                    <td>
                        @(item.IsLockedOut ? "Locked" : "Active")
                    </td>
                    <td>
                        <div class="btn-group">
                            <a href="@Url.Action("Edit", "UserManagement", new { id = @item.Id })" class="btn btn-sm btn-primary">Edit Roles</a>
                            <a href="@Url.Action("ResetPassword", "UserManagement", new { id = @item.Id })" class="btn btn-sm btn-warning">Reset Password</a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>